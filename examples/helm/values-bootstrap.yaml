keycloak:
  hostname: http://keycloak-http
  adminUsername: keycloakadmin
  adminPassword: mykeycloakpassword
  customConfig:
  - name: tdf
    payload:
      realm: tdf
      enabled: "true"
    clients:
#     client used by this script
    - payload:
        clientId: bootstrap-client
        secret: 123-456
        publicClient: "true"
        standardFlowEnabled: "true"
        clientAuthenticatorType: client-secret
        serviceAccountsEnabled: "true"
        baseUrl: "{{ externalUrl }}"
        protocol: openid-connect
        redirectUris:
        - "{{ externalUrl }}/*"
        webOrigins:
        - "+"
      mappers:
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "true"
          included.custom.audience: "tdf-entitlement"
        name: Virtru "tdf-entitlements" Audience Mapper
        protocolMapper: oidc-audience-mapper
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "true"
          included.custom.audience: "tdf-attributes"
        name: Virtru "tdf-attributes" Audience Mapper
        protocolMapper: oidc-audience-mapper
#    abacus client
    - payload:
        clientId: opentdf-abacus
        publicClient: "true"
        standardFlowEnabled: "true"
        clientAuthenticatorType: client-secret
        serviceAccountsEnabled: "true"
        protocol: openid-connect
        redirectUris:
        - "{{ externalUrl }}/*"
        webOrigins:
        - "+"
      mappers:
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "true"
          included.custom.audience: "tdf-entitlement"
        name: Virtru "tdf-entitlements" Audience Mapper
        protocolMapper: oidc-audience-mapper
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "true"
          included.custom.audience: "tdf-attributes"
        name: Virtru "tdf-attributes" Audience Mapper
        protocolMapper: oidc-audience-mapper
    - payload:
        clientId: tdf-entitlement
        publicClient: "true"
        standardFlowEnabled: "true"
        fullScopeAllowed: "false"
        baseUrl: "{{ externalUrl }}/"
        protocol: openid-connect
        redirectUris:
        - "{{ externalUrl }}/*"
        webOrigins:
        - "+"
        attributes:
          user.info.response.signature.alg: RS256
      mappers:
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "false"
          userinfo.token.claim: "true"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC UserInfo Mapper
        protocolMapper: virtru-oidc-protocolmapper
      - protocol: openid-connect
        config:
          id.token.claim: "true"
          access.token.claim: "true"
          userinfo.token.claim: "false"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC Auth Mapper
        protocolMapper: virtru-oidc-protocolmapper
    - payload:
        clientId: tdf-attributes
        publicClient: "true"
        standardFlowEnabled: "true"
        fullScopeAllowed: "false"
        baseUrl: "{{ externalUrl }}/"
        protocol: openid-connect
        redirectUris:
        - "{{ externalUrl }}/*"
        webOrigins:
        - "+"
        attributes:
          user.info.response.signature.alg: RS256
      mappers:
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "false"
          userinfo.token.claim: "true"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC UserInfo Mapper
        protocolMapper: virtru-oidc-protocolmapper
      - protocol: openid-connect
        config:
          id.token.claim: "true"
          access.token.claim: "true"
          userinfo.token.claim: "false"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC Auth Mapper
        protocolMapper: virtru-oidc-protocolmapper
    - payload:
        clientId: tdf-client
        standardFlowEnabled: "true"
        fullScopeAllowed: "false"
        protocol: openid-connect
        webOrigins:
        - "+"
        attributes:
          user.info.response.signature.alg: RS256
      mappers:
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "false"
          userinfo.token.claim: "true"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC UserInfo Mapper
        protocolMapper: virtru-oidc-protocolmapper
      - protocol: openid-connect
        config:
          id.token.claim: "true"
          access.token.claim: "true"
          userinfo.token.claim: "false"
          remote.parameters.username: "true"
          remote.parameters.clientid: "true"
          client.publickey: X-VirtruPubKey
          claim.name: tdf_claims
        name: Virtru OIDC Auth Mapper
        protocolMapper: virtru-oidc-protocolmapper
      - protocol: openid-connect
        config:
          id.token.claim: "false"
          access.token.claim: "true"
          included.custom.audience: "tdf-attributes"
        name: Virtru "tdf-attributes" Audience Mapper
        protocolMapper: oidc-audience-mapper

    users:
    - payload:
        username: alice
        enabled: "true"
        credentials:
          - value: myuserpassword
            type: password
    - payload:
        username: bob
        enabled: "true"
        credentials:
          - value: myuserpassword
            type: password
    - payload:
        username: carol
        enabled: "true"
        credentials:
          - value: myuserpassword
            type: password
    - payload:
        username: chuck
        enabled: "true"
        credentials:
        - value: myuserpassword
          type: password
    - payload:
        username: david
        enabled: "true"
        credentials:
        - value: myuserpassword
          type: password
    - payload:
        username: ted
        enabled: "true"
        credentials:
        - value: myuserpassword
          type: password
      roles:
      - view-clients
      - view-users

attributes:
  hostname: http://opentdf-attributes:4020
  realm: tdf
  clientId: bootstrap-client
  username: ted
  password: myuserpassword
  preloadedAuthorities:
    - http://testing123.fun
  preloadedAttributes:
  - authority: http://testing123.fun
    name: Color
    rule: anyOf
    state: published
    order:
    - blue
    - red
    - green
    - yellow
  - authority: http://testing123.fun
    name: Language
    rule: allOf
    state: published
    order:
    - french
    - english
    - spanish
    - portuguese

entitlements:
  hostname: http://opentdf-entitlements:4030
  realms:
  - name: tdf
    clientId: bootstrap-client
    username: ted
    password: myuserpassword
    preloadedClaims: null
    preloadedClaims:
      alice:
        - https://example.com/attr/Classification/value/C
        - https://example.com/attr/COI/value/PRD
      bob:
        - https://example.com/attr/Classification/value/C
        - https://example.com/attr/COI/value/PRC


externalUrl: http://localhost:65432

job:
  backoffLimit: 1